### This file was generated by Nexus Schema
### Do not make changes to this file directly


input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Mutation {
  upsertOneRegex(create: RegexCreateInput!, update: RegexUpdateInput!, where: RegexWhereUniqueInput!): Regex!
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  regex(where: RegexWhereUniqueInput!): Regex
}

type Regex {
  id: Int!
  processed: Int!
  validationResults(after: ValidationResultWhereUniqueInput, before: ValidationResultWhereUniqueInput, first: Int, last: Int): [ValidationResult!]!
  value: String!
}

input RegexCreateInput {
  processed: Int
  validationResults: ValidationResultCreateNestedManyWithoutRegexInput
  value: String!
}

input RegexUpdateInput {
  processed: IntFieldUpdateOperationsInput
  validationResults: ValidationResultUpdateManyWithoutRegexInput
  value: StringFieldUpdateOperationsInput
}

input RegexWhereUniqueInput {
  id: Int
  value: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type ValidationResult {
  id: Int!
  regex: Regex!
  validator: String!
}

input ValidationResultCreateNestedManyWithoutRegexInput {
  connect: [ValidationResultWhereUniqueInput!]
  connectOrCreate: [ValidationResultCreateOrConnectWithoutRegexInput!]
  create: [ValidationResultCreateWithoutRegexInput!]
}

input ValidationResultCreateOrConnectWithoutRegexInput {
  create: ValidationResultCreateWithoutRegexInput!
  where: ValidationResultWhereUniqueInput!
}

input ValidationResultCreateWithoutRegexInput {
  validator: String!
}

input ValidationResultScalarWhereInput {
  AND: [ValidationResultScalarWhereInput!]
  NOT: [ValidationResultScalarWhereInput!]
  OR: [ValidationResultScalarWhereInput!]
  id: IntFilter
  regexId: IntFilter
  validator: StringFilter
}

input ValidationResultUpdateManyMutationInput {
  validator: StringFieldUpdateOperationsInput
}

input ValidationResultUpdateManyWithWhereWithoutRegexInput {
  data: ValidationResultUpdateManyMutationInput!
  where: ValidationResultScalarWhereInput!
}

input ValidationResultUpdateManyWithoutRegexInput {
  connect: [ValidationResultWhereUniqueInput!]
  connectOrCreate: [ValidationResultCreateOrConnectWithoutRegexInput!]
  create: [ValidationResultCreateWithoutRegexInput!]
  delete: [ValidationResultWhereUniqueInput!]
  deleteMany: [ValidationResultScalarWhereInput!]
  disconnect: [ValidationResultWhereUniqueInput!]
  set: [ValidationResultWhereUniqueInput!]
  update: [ValidationResultUpdateWithWhereUniqueWithoutRegexInput!]
  updateMany: [ValidationResultUpdateManyWithWhereWithoutRegexInput!]
  upsert: [ValidationResultUpsertWithWhereUniqueWithoutRegexInput!]
}

input ValidationResultUpdateWithWhereUniqueWithoutRegexInput {
  data: ValidationResultUpdateWithoutRegexInput!
  where: ValidationResultWhereUniqueInput!
}

input ValidationResultUpdateWithoutRegexInput {
  validator: StringFieldUpdateOperationsInput
}

input ValidationResultUpsertWithWhereUniqueWithoutRegexInput {
  create: ValidationResultCreateWithoutRegexInput!
  update: ValidationResultUpdateWithoutRegexInput!
  where: ValidationResultWhereUniqueInput!
}

input ValidationResultValidatorRegexIdCompoundUniqueInput {
  regexId: Int!
  validator: String!
}

input ValidationResultWhereUniqueInput {
  id: Int
  validator_regexId: ValidationResultValidatorRegexIdCompoundUniqueInput
}
